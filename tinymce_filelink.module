<?php
/**
 * @file
 * Hook implementations and callbacks for the TinyMCE File Link module.
 */

/**
 * Implements hook_menu().
 */
function tinymce_filelink_menu() {
  $items['editor/dialog/filelink/%filter_format'] = array(
    'title' => 'Insert file link',
    'page callback' => '_tinymce_filelink_dialog',
    'theme callback' => 'ajax_base_page_theme',
    'page arguments' => array(3),
    'access callback' => 'filter_access',
    'access arguments' => array(3),
    'load callback' => 'filter_format_load',
  );
  return $items;
}

/**
 * Custom page callback to embed a view.
 *
 * @param object $format
 *   The filter format definition.
 */
function _tinymce_filelink_dialog($format) {
  // Some extra checks, as the path could be called directly.
  if ($format->editor != 'tinymce') {
    backdrop_not_found();
  }
  $view = views_get_view('tinymce_file_browser');
  if (empty($view)) {
    backdrop_not_found();
  }
  if (!$view->access('default')) {
    backdrop_access_denied();
  }

  $module_path = backdrop_get_path('module', 'tinymce_filelink');
  $render = array(
    '#type' => 'markup',
    '#markup' => $view->preview('default'),
    '#attached' => array(
      'js' => array($module_path . '/js/tinymce-filelink.js'),
    ),
  );
  return $render;
}

/**
 * Implements hook_tinymce_external_plugins().
 */
function tinymce_filelink_tinymce_external_plugins($format) {
  $module_url = base_path() . backdrop_get_path('module', 'tinymce_filelink');
  $plugins = array(
    'filelink' => array(
      'plugin_path' => $module_url . '/js/plugins/filelink/plugin.js',
      'buttons' => array(
        'filelink' => array(
          'icon' => 'link-file',
          'tooltip' => t('Insert file link'),
          'required_tags' => array('a'),
        ),
      ),
      'icons' => array(
        'link-file' => 'link-file.svg',
      ),
      'variables' => array(
        'tinymceFilelinkBrowseUrl' => url('editor/dialog/filelink/' . $format->format),
        'tinymceFilelinkTooltip' => t('Insert file link'),
        'tinymceFilelinkEnabled' => _tinymce_filelink_set_enabled(),
      ),
    ),
  );
  return $plugins;
}

/**
 * Check if the view exists and is accessible.
 *
 * @return string
 *   Either an empty string or "true". Values get casted to boolean in
 *   JavaScript.
 */
function _tinymce_filelink_set_enabled() {
  $view = views_get_view('tinymce_file_browser');
  if (empty($view) || !$view->access('default')) {
    return '';
  }
  return 'true';
}
